{"version":3,"sources":["components/Button/Button.js","components/FileExplorer/FileExplorer.js","components/DisplayRender/DisplayRender.js","components/CodeEditor/CodeEditor.js","components/Header/Header.js","api/pastebin.js","App.js","reportWebVitals.js","index.js"],"names":["Button","fileName","clicked","onClick","fileType","className","FileExplorer","editorState","onSelectionChange","DisplayRender","webPage","title","height","width","sandbox","srcDoc","CodeEditor","code","language","onChange","value","onBeforeChange","editor","options","mode","lineNumbers","lint","lineWrapping","theme","Header","proxyUrl","url","App","useState","setWebPage","html","setHtml","css","setCss","js","setJs","setEditorState","savedLink","setSavedLink","useEffect","timeout","setTimeout","clearTimeout","params","queryParams","window","location","search","pasteId","substring","Promise","resolve","reject","data","JSON","stringify","config","method","headers","axios","then","response","catch","error","resp","start","indexOf","end","console","log","toString","replace","key","switchFile","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2TAWeA,EATA,SAAC,GAA4C,IAA3CC,EAA0C,EAA1CA,SAAUC,EAAgC,EAAhCA,QAASC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,SACzC,OACQ,wBACAD,QAAS,kBAAMA,EAAQC,IACvBC,UAAS,UAAKH,EAAU,sBAAwB,eAFhD,SAGED,KC4CCK,G,MA/CM,SAAC,GAGf,IAFHC,EAEE,EAFFA,YACAC,EACE,EADFA,kBAEA,OACI,sBAAKH,UAAU,eAAf,UACI,8CACA,sBAAKA,UAAU,UAAf,UACI,cAAC,EAAD,CACIH,QAAyB,SAAhBK,EACTN,SAAS,aACTE,QAASK,EACTJ,SAAS,SAEb,cAAC,EAAD,CACIF,QAAyB,QAAhBK,EACTN,SAAS,YACTE,QAASK,EACTJ,SAAS,QAEb,cAAC,EAAD,CACIF,QAAyB,OAAhBK,EACTN,SAAS,WACTE,QAASK,EACTJ,SAAS,eCZdK,G,MAbO,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACpB,OACI,qBAAKL,UAAU,gBAAf,SACI,wBACAM,MAAM,YACNC,OAAO,OACPC,MAAM,OACNC,QAAQ,gBACRC,OAAQL,Q,8CCyBLM,EA3BI,SAAC,GAID,IAHfL,EAGc,EAHdA,MACAM,EAEc,EAFdA,KACAC,EACc,EADdA,SACAC,EAAc,EAAdA,SAKA,OACI,sBAAKd,UAAU,SAAf,UACI,4BAAIM,IACJ,cAAC,aAAD,CACAS,MAAOH,EACPZ,UAAU,UACVgB,eATiB,SAACC,EAAQJ,EAAUD,GACxCE,EAASF,IASLM,QAAS,CACLC,KAAMN,EACNO,aAAa,EACbC,MAAM,EACNC,cAAc,EACdC,MAAO,iBCnBRC,G,MARA,WACX,OACI,qBAAKxB,UAAU,SAAf,SACI,mD,gBCLNyB,EAAW,sCACXC,EAAO,uBCqGEC,MA/Ff,WACE,MAA8BC,mBAAS,IAAvC,mBAAOvB,EAAP,KAAgBwB,EAAhB,KACA,EAAwBD,mBAAS,IAAjC,mBAAOE,EAAP,KAAaC,EAAb,KACA,EAAsBH,mBAAS,IAA/B,mBAAOI,EAAP,KAAYC,EAAZ,KACA,EAAoBL,mBAAS,IAA7B,mBAAOM,EAAP,KAAWC,EAAX,KACA,EAAsCP,mBAAS,QAA/C,mBAAO1B,EAAP,KAAoBkC,EAApB,KACA,EAAkCR,mBAAS,IAA3C,mBAAOS,EAAP,KAAkBC,EAAlB,KA0DA,OA3BAC,qBAAU,WACR,IAAMC,EAAUC,YAAW,WACzBZ,EAAW,qCAAD,OAEEC,EAFF,qCAGGE,EAHH,uCAIIE,EAJJ,kCAMT,KACH,OAAO,kBAAMQ,aAAaF,MACzB,CAACV,EAAME,EAAKE,IACfK,qBAAU,WACR,IDtDqBI,ECsDfC,EAAcC,OAAOC,SAASC,QDtDfJ,ECuDH,CAACK,QAAQJ,EAAYK,UAAU,IDtD1C,IAAIC,SAAQ,SAACC,EAASC,GACzB,IAAMC,EAAOC,KAAKC,UAAU,CAAC,OAAS,MAAM,IAAM,GAAN,OAAS7B,EAAT,gBAAoBiB,EAAOK,SAAU,KAAO,KAClFQ,EAAS,CACbC,OAAQ,OACR/B,IAAI,GAAD,OAAKD,EAAL,aACHiC,QAAS,CACP,eAAgB,oBAElBL,KAAOA,GAETM,IAAMH,GACLI,MAAK,SAAUC,GACZV,EAAQU,EAASR,SAEpBS,OAAM,SAAUC,GACbX,EAAOW,UCwCZH,MAAK,SAAAI,GACJ,IAAIC,EAAQD,EAAKE,QAAQ,UAAY,EACjCC,EAAMH,EAAKE,QAAQ,WACvBnC,EAAQiC,EAAKf,UAAUgB,EAAOE,IAC9BF,EAAQD,EAAKE,QAAQ,WAAa,EAClCC,EAAMH,EAAKE,QAAQ,YACnBjC,EAAO+B,EAAKf,UAAUgB,EAAOE,IAC7BF,EAAQD,EAAKE,QAAQ,YAAc,EACnCC,EAAMH,EAAKE,QAAQ,cACnB/B,EAAM6B,EAAKf,UAAUgB,EAAOE,OAE7BL,OAAM,SAAAC,GAAK,OAAIK,QAAQC,IAAIN,QAC7B,IAED,sBAAK/D,UAAU,MAAf,UACE,cAAC,EAAD,IACA,sBAAKA,UAAU,OAAf,UACE,sBAAKA,UAAU,aAAf,UACE,sBAAKA,UAAU,eAAf,UACE,cAAC,EAAD,CACEE,YAAaA,EACbC,kBAAmBiC,IAErB,wBACAtC,QAAS,WD5DM,IAAC6C,KC6DStC,ED5D1B,IAAI6C,SAAQ,SAACC,EAASC,GACzB,IAAMC,EAAOC,KAAKC,UAAU,CACxB,OAAS,OACT,IAAM,GAAN,OAAS7B,EAAT,qBACA,KAAO,CACH,YAAc,mCACd,eAAkBiB,EAClB,WAAa,WAGfa,EAAS,CACfC,OAAQ,OACR/B,IAAI,GAAD,OAAKD,EAAL,cACHiC,QAAS,CACL,eAAgB,oBAEpBL,QAGAM,IAAMH,GACLI,MAAK,SAAUC,GACZV,EAAQU,EAASR,SAEpBS,OAAM,SAAUC,GACbX,EAAOW,UCqCFH,MAAK,SAAAI,GAAI,OAAI1B,EAAa0B,EAAKM,WAAWC,QAAQ,wBAAyB,sDAC3ET,OAAM,SAAAC,GAAK,OAAIK,QAAQC,IAAIN,OAEhC/D,UAAU,cANV,SAOC,uCAEc,KAAdqC,EAAoB,mBAAGrC,UAAU,aAAb,SAA2BqC,IAAmB,yBA3E1D,SAACmC,GAClB,OAAQA,GACN,IAAK,OACH,OAAQ,cAAC,EAAD,CACElE,MAAM,OACNQ,SAAUiB,EACVlB,SAAS,MACTD,KAAMkB,IAElB,IAAK,MACH,OAAQ,cAAC,EAAD,CACExB,MAAM,MACNQ,SAAUmB,EACVpB,SAAS,MACTD,KAAMoB,IAElB,IAAK,KACH,OAAQ,cAAC,EAAD,CACE1B,MAAM,KACNQ,SAAUqB,EACVtB,SAAS,aACTD,KAAMsB,KAwDbuC,CAAWvE,MAEd,sBAAKF,UAAU,YAAf,UACE,2CACA,cAAC,EAAD,CAAeK,QAASA,cCrFnBqE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.6bca914f.chunk.js","sourcesContent":["import React from 'react'\nimport './Button.css'\nconst Button = ({fileName, clicked, onClick, fileType}) => {\n    return (\n            <button\n            onClick={() => onClick(fileType)}\n            className={`${clicked ? 'file-button clicked' : 'file-button'}`}\n            >{fileName}</button>\n    )\n}\n\nexport default Button\n","import React from 'react'\nimport Button from '../Button/Button'\nimport './FileExplorer.css'\n\nconst FileExplorer = ({\n    editorState,\n    onSelectionChange\n}) => {\n    return (\n        <div className='FileExplorer'>\n            <p>File Explorer</p>\n            <div className='buttons'>\n                <Button \n                    clicked={editorState === 'html' ? true : false}\n                    fileName='Index.html'\n                    onClick={onSelectionChange}\n                    fileType='html'\n                />\n                <Button\n                    clicked={editorState === 'css' ? true : false} \n                    fileName='Index.css'\n                    onClick={onSelectionChange}\n                    fileType='css'\n                />\n                <Button \n                    clicked={editorState === 'js' ? true : false}\n                    fileName='Index.js'\n                    onClick={onSelectionChange}\n                    fileType='js'\n                />\n            </div>\n            {/* <button \n            onClick={() => {\n                // pastebin.getPaste({pasteId:'KyTF8sAS'})\n                // .then(resp => console.log(resp))\n                // .catch(error => console.log(error))\n                pastebin.createPaste({\n                    html:\"<h1>this is all test</h1>\",\n                    css:\"background-color: blue\",\n                    js: \"const test = \"this is a test\";\"\n                }) \n                .then(resp => console.log(resp))\n                .catch(error => console.log(error))\n            }}\n            className='save-button'\n            ><p>Save</p>\n            </button> */}\n        </div>\n    )\n}\n\nexport default FileExplorer\n","import React from 'react'\nimport './DisplayRender.css'\n\nconst DisplayRender = ({webPage}) => {\n    return (\n        <div className='DisplayRender'>\n            <iframe\n            title='Live View'\n            height=\"100%\"\n            width=\"100%\"\n            sandbox=\"allow-scripts\"\n            srcDoc={webPage}/>\n        </div>\n    )\n}\n\nexport default DisplayRender\n","import React from 'react'\nimport './CodeEditor.css'\nimport 'codemirror/lib/codemirror.css'\nimport 'codemirror/theme/isotope.css'\nimport 'codemirror/mode/xml/xml'\nimport 'codemirror/mode/javascript/javascript'\nimport 'codemirror/mode/css/css'\nimport {Controlled as CodeMirror} from 'react-codemirror2'\n\nconst CodeEditor = ({\n    title,\n    code,\n    language,\n    onChange}) => {\n    \n        const handleChange = (editor, language, code) => {\n        onChange(code)\n    }\n    return (\n        <div className='editor'>\n            <p>{title}</p>\n            <CodeMirror\n            value={code}\n            className='wrapper'\n            onBeforeChange={handleChange}\n            options={{\n                mode: language,\n                lineNumbers: true,\n                lint: true,\n                lineWrapping: true,\n                theme: 'isotope',\n              }}/>\n        </div>\n    )\n}\n\nexport default CodeEditor\n","import React from 'react'\nimport './Header.css'\n\nconst Header = () => {\n    return (\n        <div className='Header'>\n            <h2>Frontend Task</h2>\n        </div>\n    )\n}\n\nexport default Header\n","import axios from 'axios'\nconst proxyUrl = 'https://nodeproxycors.herokuapp.com'\nconst url =  'https://pastebin.com'\nexport const getPaste = (params) => {\n    return new Promise((resolve, reject) => {\n        const data = JSON.stringify({\"method\":\"GET\",\"url\":`${url}/raw/${params.pasteId}`,\"body\":{}});\n        const config = {\n          method: 'post',\n          url: `${proxyUrl}/proxyGet`,\n          headers: { \n            'Content-Type': 'application/json'\n          },\n          data : data\n        };\n        axios(config)\n        .then(function (response) {\n            resolve(response.data);\n        })\n        .catch(function (error) {\n            reject(error);\n        });      \n    })\n}\nexport const createPaste = (params) => {\n    return new Promise((resolve, reject) => {\n        const data = JSON.stringify({\n            \"method\":\"POST\",\n            \"url\":`${url}/api/api_post.php`,\n            \"body\":{\n                \"api_dev_key\":\"DHvH8ExjxKnghqoURogD3u1V05T9i92J\",\n                \"api_paste_code\": params,\n                \"api_option\":\"paste\"\n            }});\n\n        const config = {\n        method: 'post',\n        url: `${proxyUrl}/proxyPost`,\n        headers: { \n            'Content-Type': 'application/json', \n            },\n        data\n        };\n\n        axios(config)\n        .then(function (response) {\n            resolve(response.data);\n        })\n        .catch(function (error) {\n            reject(error);\n        });\n\n    })\n}","import './App.css';\nimport { useEffect, useState } from 'react';\nimport FileExplorer from './components/FileExplorer/FileExplorer';\nimport DisplayRender from './components/DisplayRender/DisplayRender';\nimport CodeEditor from './components/CodeEditor/CodeEditor';\nimport Header from './components/Header/Header';\nimport * as pastebin from \"./api/pastebin\";\n\nfunction App() {\n  const [webPage, setWebPage] = useState('') // maintains the state of the live view \n  const [html, setHtml] = useState('') // maintains the state of the HTML code typed in the HTML code Editor\n  const [css, setCss] = useState('') // maintains the state of the CSS code typed in the HTML code Editor\n  const [js, setJs] = useState('') // maintains the state of the Javascript code typed in the HTML code Editor\n  const [editorState, setEditorState] = useState('html') // maintains the state of the selection of the file in the file explorer\n  const [savedLink, setSavedLink] = useState('')\n  // the following function switches the file based on the selection of the user\n  const switchFile = (key) => {\n    switch (key) {\n      case 'html':\n        return (<CodeEditor\n                  title='HTML'\n                  onChange={setHtml}\n                  language='xml'\n                  code={html}\n                />)\n      case 'css':\n        return (<CodeEditor\n                  title='CSS'\n                  onChange={setCss}\n                  language='css'\n                  code={css}\n                />)\n      case 'js':\n        return (<CodeEditor\n                  title='JS'\n                  onChange={setJs}\n                  language='javascript'\n                  code={js}\n                />)\n      default:\n        break;\n    }\n  }\n  //the following function is triggered when HTML, CSS, or JS \n  //in the editors are changed and hot-reloads the Live view\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setWebPage(`\n        <html>\n          <body>${html}</body>\n          <style>${css}</style>\n          <script>${js}</script>\n        </html>`)\n    }, 1000)\n    return () => clearTimeout(timeout)\n  }, [html, css, js])\n  useEffect(() => {\n    const queryParams = window.location.search\n    pastebin.getPaste({pasteId:queryParams.substring(4)})\n      .then(resp => {\n        let start = resp.indexOf('<body>') + 6\n        let end = resp.indexOf('</body>') \n        setHtml(resp.substring(start, end))\n        start = resp.indexOf('<style>') + 7\n        end = resp.indexOf('</style>') \n        setCss(resp.substring(start, end))\n        start = resp.indexOf('<script>') + 8\n        end = resp.indexOf('</script>') \n        setJs(resp.substring(start, end))\n      })\n      .catch(error => console.log(error))\n  }, [])\n  return (\n    <div className=\"App\">\n      <Header/>\n      <div className='core'>\n        <div className='exp-editor'>\n          <div className='app-explorer'>\n            <FileExplorer \n              editorState={editorState}\n              onSelectionChange={setEditorState}\n            />\n            <button \n            onClick={() => {\n                pastebin.createPaste(webPage) \n                .then(resp => setSavedLink(resp.toString().replace(\"https://pastebin.com/\", \"https://datta2410.github.io/dyte-frontend/?id=\")))\n                .catch(error => console.log(error))\n            }}\n            className='save-button'\n            ><p>Save</p>\n            </button>\n            {savedLink !== '' ? (<p className='saved-link'>{savedLink}</p>) : (<p></p>)}\n          </div>\n          {switchFile(editorState)}\n        </div>\n        <div className='live-view'>\n          <h2>Live View</h2>\n          <DisplayRender webPage={webPage}/>\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}